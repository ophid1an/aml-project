> library('scmamp')
>
> df <- read.csv('erwthma1-results.csv')
> df <- df[-c(1)]
>
> imanDavenportTest(df)

	Iman Davenport's correction of Friedman's rank sum test

data:  df
Corrected Friedman's chi-squared = 6.6749, df1 = 7, df2 = 63, p-value
= 6.469e-06

>
> nm <- nemenyiTest(df, alpha = 0.05)
> nm

	Nemenyi test

data:  df
Critical difference = 3.4198, k = 8, df = 72

>
> nm$diff.matrix
        DT Bagged.DT AdaBoost.DT GradientBoost.DT OneVsOne.DT OneVsRest.DT
[1,]  0.00      2.70       -1.10             2.10       -0.55        -0.10
[2,]  2.70      0.00       -3.80            -0.60       -3.25        -2.80
[3,] -1.10     -3.80        0.00             3.20        0.55         1.00
[4,]  2.10     -0.60        3.20             0.00       -2.65        -2.20
[5,] -0.55     -3.25        0.55            -2.65        0.00         0.45
[6,] -0.10     -2.80        1.00            -2.20        0.45         0.00
[7,]  3.20      0.50        4.30             1.10        3.75         3.30
[8,]  0.95     -1.75        2.05            -1.15        1.50         1.05
        RF Bagged.DT.RP
[1,]  3.20         0.95
[2,]  0.50        -1.75
[3,]  4.30         2.05
[4,]  1.10        -1.15
[5,]  3.75         1.50
[6,]  3.30         1.05
[7,]  0.00        -2.25
[8,] -2.25         0.00
>
> plotCD(results.matrix = df, alpha = 0.05)
>
> fb <- postHocTest(data = df, test = 'friedman', correct = 'bergmann')
> fb
$summary
         DT Bagged.DT AdaBoost.DT GradientBoost.DT OneVsOne.DT OneVsRest.DT
[1,] 0.7789    0.8046      0.7705           0.7981      0.7746       0.7802
         RF Bagged.DT.RP
[1,] 0.8095       0.7952

$raw.pval
                          DT    Bagged.DT  AdaBoost.DT GradientBoost.DT
DT                        NA 0.0137108301 3.153025e-01      0.055234254
Bagged.DT        0.013710830           NA 5.225754e-04      0.583882421
AdaBoost.DT      0.315302452 0.0005225754           NA      0.003487005
GradientBoost.DT 0.055234254 0.5838824208 3.487005e-03               NA
OneVsOne.DT      0.615611944 0.0030088677 6.156119e-01      0.015558622
OneVsRest.DT     0.927264474 0.0105871373 3.613104e-01      0.044609718
RF               0.003487005 0.6480768681 8.660552e-05      0.315302452
Bagged.DT.RP     0.385817436 0.1101489242 6.129168e-02      0.293809354
                 OneVsOne.DT OneVsRest.DT           RF Bagged.DT.RP
DT               0.615611944  0.927264474 3.487005e-03   0.38581744
Bagged.DT        0.003008868  0.010587137 6.480769e-01   0.11014892
AdaBoost.DT      0.615611944  0.361310429 8.660552e-05   0.06129168
GradientBoost.DT 0.015558622  0.044609718 3.153025e-01   0.29380935
OneVsOne.DT               NA  0.681225120 6.187350e-04   0.17090352
OneVsRest.DT     0.681225120           NA 2.591276e-03   0.33780340
RF               0.000618735  0.002591276           NA   0.03997960
Bagged.DT.RP     0.170903520  0.337803396 3.997960e-02           NA

$corrected.pval
                         DT  Bagged.DT AdaBoost.DT GradientBoost.DT
DT                       NA 0.12339747 1.000000000       0.47975524
Bagged.DT        0.12339747         NA 0.010974083       1.00000000
AdaBoost.DT      1.00000000 0.01097408          NA       0.05579208
GradientBoost.DT 0.47975524 1.00000000 0.055792078               NA
OneVsOne.DT      1.00000000 0.04513301 1.000000000       0.17114484
OneVsRest.DT     1.00000000 0.11645851 1.000000000       0.47975524
RF               0.04533106 1.00000000 0.002424955       1.00000000
Bagged.DT.RP     1.00000000 0.99134032 0.796791846       1.00000000
                 OneVsOne.DT OneVsRest.DT          RF Bagged.DT.RP
DT                1.00000000   1.00000000 0.045331064    1.0000000
Bagged.DT         0.04513301   0.11645851 1.000000000    0.9913403
AdaBoost.DT       1.00000000   1.00000000 0.002424955    0.7967918
GradientBoost.DT  0.17114484   0.47975524 1.000000000    1.0000000
OneVsOne.DT               NA   1.00000000 0.012993435    1.0000000
OneVsRest.DT      1.00000000           NA 0.041460412    1.0000000
RF                0.01299344   0.04146041          NA    0.4797552
Bagged.DT.RP      1.00000000   1.00000000 0.479755235           NA

>
> writeTabular(table = fb$corrected.pval)
\begin{tabular}{|lllllllll|}
\hline
 & DT & Bagged.DT & AdaBoost.DT & GradientBoost.DT & OneVsOne.DT & OneVsRest.DT & RF & Bagged.DT.RP \\
DT & n/a & 0.123 &    1 & 0.48 &    1 &    1 & 0.0453 &    1 \\
Bagged.DT & 0.123 & n/a & 0.011 &    1 & 0.0451 & 0.116 &    1 & 0.991 \\
AdaBoost.DT &    1 & 0.011 & n/a & 0.0558 &    1 &    1 & 0.00242 & 0.797 \\
GradientBoost.DT & 0.48 &    1 & 0.0558 & n/a & 0.171 & 0.48 &    1 &    1 \\
OneVsOne.DT &    1 & 0.0451 &    1 & 0.171 & n/a &    1 & 0.013 &    1 \\
OneVsRest.DT &    1 & 0.116 &    1 & 0.48 &    1 & n/a & 0.0415 &    1 \\
RF & 0.0453 &    1 & 0.00242 &    1 & 0.013 & 0.0415 & n/a & 0.48 \\
Bagged.DT.RP &    1 & 0.991 & 0.797 &    1 &    1 &    1 & 0.48 & n/a \\
\hline
\end{tabular}
>
> bold <- fb$corrected.pval < 0.05
> bold[is.na(bold)] <- FALSE
> writeTabular(table = fb$corrected.pval, format = 'f', bold = bold)
\begin{tabular}{|lllllllll|}
\hline
 & DT & Bagged.DT & AdaBoost.DT & GradientBoost.DT & OneVsOne.DT & OneVsRest.DT & RF & Bagged.DT.RP \\
DT & n/a & 0.123 & 1.000 & 0.480 & 1.000 & 1.000 & {\bf 0.045} & 1.000 \\
Bagged.DT & 0.123 & n/a & {\bf 0.011} & 1.000 & {\bf 0.045} & 0.116 & 1.000 & 0.991 \\
AdaBoost.DT & 1.000 & {\bf 0.011} & n/a & 0.056 & 1.000 & 1.000 & {\bf 0.002} & 0.797 \\
GradientBoost.DT & 0.480 & 1.000 & 0.056 & n/a & 0.171 & 0.480 & 1.000 & 1.000 \\
OneVsOne.DT & 1.000 & {\bf 0.045} & 1.000 & 0.171 & n/a & 1.000 & {\bf 0.013} & 1.000 \\
OneVsRest.DT & 1.000 & 0.116 & 1.000 & 0.480 & 1.000 & n/a & {\bf 0.041} & 1.000 \\
RF & {\bf 0.045} & 1.000 & {\bf 0.002} & 1.000 & {\bf 0.013} & {\bf 0.041} & n/a & 0.480 \\
Bagged.DT.RP & 1.000 & 0.991 & 0.797 & 1.000 & 1.000 & 1.000 & 0.480 & n/a \\
\hline
\end{tabular}
